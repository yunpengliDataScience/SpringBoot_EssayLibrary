<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<display-name>JavaServerFaces</display-name>

	<!-- Bootstrap the root application context as usual using ContextLoaderListener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext 
		instead of the default XmlWebApplicationContext -->
	<context-param>
		<param-name>contextClass</param-name>
		<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
	</context-param>
	<!-- Configuration locations must consist of one or more comma- or space-delimited 
		fully-qualified @Configuration classes -->
	
	<!--  
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>com.library.essay.config.ApplicationContext</param-value>
	</context-param>
	-->
	<context-param>
		<param-name>spring.profiles.active</param-name>
		<param-value>dev</param-value>
		<!-- <param-value>prod</param-value> -->
	</context-param>

	<!-- Change to "Production" when you are ready to deploy -->
	<context-param>
		<param-name>javax.faces.PROJECT_STAGE</param-name>
		<param-value>Development</param-value>
	</context-param>

	<context-param>
		<param-name>primefaces.THEME</param-name>
		<param-value>sunny</param-value>
	</context-param>

	<!-- Welcome page -->
	<welcome-file-list>
		<welcome-file>faces/homePage.xhtml</welcome-file>
	</welcome-file-list>


	<error-page>
		<exception-type>javax.faces.application.ViewExpiredException</exception-type>
		<location>/faces/homePage.xhtml</location>
	</error-page>

	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<!-- filter -->

	<!-- OpenEntityManagerInViewFilter filter used to prevent LazyInstantiationException -->
	<filter>
		<filter-name>OpenEntityManagerInViewFilter</filter-name>
		<filter-class>
			org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
		<init-param>
			<param-name>entityManagerFactoryBeanName</param-name>
			<param-value>entityManagerFactory</param-value>
		</init-param>
		<init-param>
			<param-name>flushMode</param-name>
			<param-value>AUTO</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>OpenEntityManagerInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- JSF mapping -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Map these files with JSF -->
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>/faces/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.faces</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.xhtml</url-pattern>
	</servlet-mapping>

	<!--Google service based SpellChecker-->
    <servlet>
        <description>A spell checking servlet that accepts JSON requests and processes them using Jazzy</description>
        <servlet-name>google-spellchecker</servlet-name>
        <servlet-class>com.library.essay.tinymce.spellchecker.GoogleSpellChekerServlet</servlet-class>
        <load-on-startup>3</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>google-spellchecker</servlet-name>
        <url-pattern>/servlet/google-spellchecker</url-pattern>
    </servlet-mapping>

    <!--Jazzy SpellChecker-->
    <servlet>
        <description>A spell checking servlet that accepts JSON requests and processes them using Jazzy</description>
        <servlet-name>jazzy-spellchecker</servlet-name>
        <servlet-class>com.library.essay.tinymce.spellchecker.JazzySpellCheckerServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>jazzy-spellchecker</servlet-name>
        <url-pattern>/servlet/jazzy-spellchecker</url-pattern>
    </servlet-mapping>


    <!--JMySpell SpellChecker-->
    <servlet>
        <description>A spell checking servlet that accepts JSON requests and processes them using JMySpell</description>
        <servlet-name>jmyspell-spellchecker</servlet-name>
        <servlet-class>com.library.essay.tinymce.spellchecker.JMySpellCheckerServlet</servlet-class>
        <load-on-startup>4</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>jmyspell-spellchecker</servlet-name>
        <url-pattern>/servlet/jmyspell-spellchecker</url-pattern>
    </servlet-mapping>
    
	<!-- Report servlet -->
	<servlet>
		<servlet-name>reportServlet</servlet-name>
		<servlet-class>
			org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
		<load-on-startup>5</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>reportServlet</servlet-name>
		<url-pattern>/report</url-pattern>
	</servlet-mapping>

</web-app>